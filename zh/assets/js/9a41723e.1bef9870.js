"use strict";(self.webpackChunkcsi_nn_2=self.webpackChunkcsi_nn_2||[]).push([[1164],{3905:(e,t,r)=>{r.d(t,{Zo:()=>s,kt:()=>d});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var l=n.createContext({}),u=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},s=function(e){var t=u(e.components);return n.createElement(l.Provider,{value:t},e.children)},f={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},p=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,i=e.originalType,l=e.parentName,s=c(e,["components","mdxType","originalType","parentName"]),p=u(r),d=a,h=p["".concat(l,".").concat(d)]||p[d]||f[d]||i;return r?n.createElement(h,o(o({ref:t},s),{},{components:r})):n.createElement(h,o({ref:t},s))}));function d(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=r.length,o=new Array(i);o[0]=p;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c.mdxType="string"==typeof e?e:a,o[1]=c;for(var u=2;u<i;u++)o[u]=r[u];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}p.displayName="MDXCreateElement"},4057:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>f,frontMatter:()=>i,metadata:()=>c,toc:()=>u});var n=r(7462),a=(r(7294),r(3905));const i={sidebar_position:1},o="Interface",c={unversionedId:"tutorial-extras/Interface",id:"tutorial-extras/Interface",title:"Interface",description:"The interface of SHL uses T-HEAD neural network library API for XuanTie CPU platform: CSI-NN2, CSI-NN2's documentation is built by source code.",source:"@site/docs/tutorial-extras/Interface.md",sourceDirName:"tutorial-extras",slug:"/tutorial-extras/Interface",permalink:"/zh/docs/tutorial-extras/Interface",draft:!1,editUrl:"https://github.com/alibaba-open-source-website/easyexcel/tree/main/docs/tutorial-extras/Interface.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Tutorial - Extras",permalink:"/zh/docs/category/tutorial---extras"}},l={},u=[{value:"NN Interface",id:"nn-interface",level:2},{value:"Init Interface",id:"init-interface",level:2},{value:"Auxiliary Interface",id:"auxiliary-interface",level:2},{value:"Data Structure",id:"data-structure",level:2}],s={toc:u};function f(e){let{components:t,...r}=e;return(0,a.kt)("wrapper",(0,n.Z)({},s,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"interface"},"Interface"),(0,a.kt)("p",null,"The interface of SHL uses T-HEAD neural network library API for XuanTie CPU platform: CSI-NN2, CSI-NN2's documentation is built by source code."),(0,a.kt)("h2",{id:"nn-interface"},"NN Interface"),(0,a.kt)("p",null,"CSI-NN2 provides various network layer interfaces. All network layer interfaces are declared in csi_nn.h .\nThe NN interface that prebuilt from source code shows detail:\u300a ",(0,a.kt)("a",{parentName:"p",href:"https://zhangwm-pt.github.io/shl/group__NN.html"},"NN function")," \u300b."),(0,a.kt)("h2",{id:"init-interface"},"Init Interface"),(0,a.kt)("p",null,"CSI-NN2 provides various initialization interfaces at the network layer. All initialization interfaces are declared in csi_nn.h\u3002\nThe initialization interface assigns values to the callback function pointer (params->base) in the network layer parameter description structure based on different conditions.\nThe init interface  that prebuilt from source code shows detail:\u300a ",(0,a.kt)("a",{parentName:"p",href:"https://zhangwm-pt.github.io/shl/group__INIT.html"},"Initialize function")," \u300b."),(0,a.kt)("h2",{id:"auxiliary-interface"},"Auxiliary Interface"),(0,a.kt)("p",null,"CSI-NN2 provides a set of optional auxiliary functions in addition to various network layer interfaces.\nThe additional function interface can be used to assist in constructing the process executed according to the diagram, assigning and modifying the operation structure, etc.\nThe declaration of the auxiliary function in csinn_runtime.h .\nThe auxiliary interface  that prebuilt from source code shows detail:\u300a ",(0,a.kt)("a",{parentName:"p",href:"https://zhangwm-pt.github.io/shl/group__AUX.html"},"Auxiliary function")," \u300b."),(0,a.kt)("h2",{id:"data-structure"},"Data Structure"),(0,a.kt)("p",null,"The Data Structure that prebuilt from source code shows detail:\u300a ",(0,a.kt)("a",{parentName:"p",href:"https://zhangwm-pt.github.io/shl/group__DS.html"},"Data structure")," \u300b."))}f.isMDXComponent=!0}}]);